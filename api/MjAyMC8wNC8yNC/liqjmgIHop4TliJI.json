{"title":"动态规划","date":"2020-04-24T14:12:11.000Z","date_formatted":{"ll":"Apr 24, 2020","L":"04/24/2020","MM-DD":"04-24"},"link":"2020/04/24/动态规划","tags":["动态规划","算法思想","背包问题"],"updated":"2022-01-22T09:45:40.643Z","content":"<p>动态规划的问题总结如下：</p>\n<h4 id=\"1.斐波那契数列引入动态规划问题\">1.斐波那契数列引入动态规划问题<a title=\"#1.斐波那契数列引入动态规划问题\" href=\"#1.斐波那契数列引入动态规划问题\"></a></h4>\n<p><img src=\"/images/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92.png\" alt=\"123\" loading=\"lazy\"><br>\n使用动态规划思想解决问题的起点是，通过分解目标问题，得到要解决目标问题的子问题。通过对子问题的求解，继而求解其他更加复杂的子问题(包括“最终问题”)。类似递归的逆过程，“递归”是自顶向下的循环求解思想，而“动态规划”是自下而上的求解思想，从子问题向上求解。<br>\n下面三个例子都是动态规划的经典问题：</p>\n<h6 id=\"1.求解最长公共子串\">1.求解最长公共子串<a title=\"#1.求解最长公共子串\" href=\"#1.求解最长公共子串\"></a></h6>\n<p>题目：给定两个字符串  text1 和  text2，返回这两个字符串的最长公共子序列的长度。</p>\n<p>一个字符串的   子序列   是指这样一个新的字符串：它是由原字符串在不改变字符的相对顺序的情况下删除某些字符（也可以不删除任何字符）后组成的新字符串。<br>\n例如，“ace” 是 “abcde” 的子序列，但 “aec” 不是 “abcde” 的子序列。两个字符串的「公共子序列」是这两个字符串所共同拥有的子序列。<br>\n若这两个字符串没有公共子序列，则返回 0。</p>\n<h6 id=\"示例-1\">示例 1<a title=\"#示例-1\" href=\"#示例-1\"></a></h6>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：text1 = <span class=\"string\">&quot;abcde&quot;</span>, text2 = <span class=\"string\">&quot;ace&quot;</span></span><br><span class=\"line\">输出：<span class=\"number\">3</span></span><br><span class=\"line\">解释：最长公共子序列是 <span class=\"string\">&quot;ace&quot;</span>，它的长度为 <span class=\"number\">3</span>。</span><br></pre></td></tr></table></figure>\n<p>思路为动态规划，使用一个二维数组存储两个字符串相同<br>\n位置的字符比较结果。初始化时，该数组的每一个元素被设置为 0。每次在这两个数组的<br>\n相同位置发现了匹配，就将数组对应行和列的元素加 1，否则保持为 0。<br>\n按照这种方式，一个变量会持续记录下找到了多少个匹配项。当算法执行完毕时，这个变<br>\n量会结合一个索引变量来获得最长公共子串。<br>\n代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">text1</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">text2</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestCommonSubsequence = <span class=\"keyword\">function</span> (<span class=\"params\">text1, text2</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> n = text1.<span class=\"property\">length</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> m = text2.<span class=\"property\">length</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> dp = <span class=\"title class_\">Array</span>.<span class=\"title function_\">from</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n + <span class=\"number\">1</span>), <span class=\"function\">() =&gt;</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(m + <span class=\"number\">1</span>).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>))</span><br><span class=\"line\">  <span class=\"comment\">//这里用到了ES6的新Array方法from,实现一个浅拷贝，向数组赋值0，</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">1</span>; j &lt;= m; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (text1[i - <span class=\"number\">1</span>] == text2[j - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        dp[i][j] = dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        dp[i][j] = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(dp[i][j - <span class=\"number\">1</span>], dp[i - <span class=\"number\">1</span>][j])</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[n][m]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"下面有两道题用到了动态规划，当然也有别的方法，此处只是对动态规划进行应用与演示.\">下面有两道题用到了动态规划，当然也有别的方法，此处只是对动态规划进行应用与演示.<a title=\"#下面有两道题用到了动态规划，当然也有别的方法，此处只是对动态规划进行应用与演示.\" href=\"#下面有两道题用到了动态规划，当然也有别的方法，此处只是对动态规划进行应用与演示.\"></a></h5>\n<h4 id=\"2.leetcode-62-不同路径-i\">2.leetcode-62-不同路径 I<a title=\"#2.leetcode-62-不同路径-i\" href=\"#2.leetcode-62-不同路径-i\"></a></h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: m = <span class=\"number\">3</span>, n = <span class=\"number\">2</span></span><br><span class=\"line\">输出: <span class=\"number\">3</span></span><br><span class=\"line\">解释: 从左上角开始，总共有 <span class=\"number\">3</span> 条路径可以到达右下角。</span><br><span class=\"line\"><span class=\"number\">1.</span> 向右 -&gt; 向右 -&gt; 向下 <span class=\"number\">2.</span> 向右 -&gt; 向下 -&gt; 向右 <span class=\"number\">3.</span> 向下 -&gt; 向右 -&gt; 向右</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">m</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number</span>&#125; <span class=\"variable\">n</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uniquePaths = <span class=\"keyword\">function</span> (<span class=\"params\">m, n</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(m)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">    dp[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span> || j == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        dp[i][j] = <span class=\"number\">1</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        dp[i][j] = dp[i - <span class=\"number\">1</span>][j] + dp[i][j - <span class=\"number\">1</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[m - <span class=\"number\">1</span>][n - <span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3.leetcode-63-不同路径-ii(障碍物)\">3.leetcode-63-不同路径 II(障碍物)<a title=\"#3.leetcode-63-不同路径-ii(障碍物)\" href=\"#3.leetcode-63-不同路径-ii(障碍物)\"></a></h4>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: [   [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>],   [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>],   [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>] ]</span><br><span class=\"line\">输出: <span class=\"number\">2</span></span><br><span class=\"line\">解释: <span class=\"number\">3</span>x3</span><br><span class=\"line\">网格的正中间有一个障碍物。 从左上角到右下角一共有 <span class=\"number\">2</span> 条不同的路径： <span class=\"number\">1.</span> 向右 -&gt;</span><br><span class=\"line\">向右 -&gt; 向下 -&gt; 向下 <span class=\"number\">2.</span> 向下 -&gt; 向下 -&gt; 向右 -&gt; 向右</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">number[][]</span>&#125; <span class=\"variable\">obstacleGrid</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">number</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> uniquePathsWithObstacles = <span class=\"keyword\">function</span> (<span class=\"params\">obstacleGrid</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> n = obstacleGrid.<span class=\"property\">length</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> m = obstacleGrid[<span class=\"number\">0</span>].<span class=\"property\">length</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> dp = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(n)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    dp[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(m).<span class=\"title function_\">fill</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = obstacleGrid[<span class=\"number\">0</span>][<span class=\"number\">0</span>] == <span class=\"number\">0</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dp[<span class=\"number\">0</span>][<span class=\"number\">0</span>] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = <span class=\"number\">1</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obstacleGrid[<span class=\"number\">0</span>][j] != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      dp[<span class=\"number\">0</span>][j] = dp[<span class=\"number\">0</span>][j - <span class=\"number\">1</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> r = <span class=\"number\">1</span>; r &lt; n; r++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obstacleGrid[r][<span class=\"number\">0</span>] != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      dp[r][<span class=\"number\">0</span>] = dp[r - <span class=\"number\">1</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> r = <span class=\"number\">1</span>; r &lt; m; r++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (obstacleGrid[i][r] != <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dp[i][r] = dp[i - <span class=\"number\">1</span>][r] + dp[i][r - <span class=\"number\">1</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> dp[n - <span class=\"number\">1</span>][m - <span class=\"number\">1</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"Promise从入门到放弃","link":"2020/04/28/Promise从入门到放弃"},"next":{"title":"箭头函数","link":"2020/04/21/箭头函数"},"plink":"https://edsion11.github.io/2020/04/24/动态规划/","toc":[{"id":"1.斐波那契数列引入动态规划问题","title":"1.斐波那契数列引入动态规划问题","index":"1"},{"id":"2.leetcode-62-不同路径-i","title":"2.leetcode-62-不同路径 I","index":"2"},{"id":"3.leetcode-63-不同路径-ii(障碍物)","title":"3.leetcode-63-不同路径 II(障碍物)","index":"3"}]}