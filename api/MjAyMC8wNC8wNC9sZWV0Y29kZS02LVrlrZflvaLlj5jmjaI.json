{"title":"leetcode-6-Z字形变换","date":"2020-04-04T14:20:29.000Z","date_formatted":{"ll":"Apr 4, 2020","L":"04/04/2020","MM-DD":"04-04"},"link":"2020/04/04/leetcode-6-Z字形变换","tags":["leetcode"],"categories":["leetcode"],"updated":"2022-01-22T09:45:40.643Z","content":"<h5>题目描述</h5>\n将一个给定字符串根据给定的行数，以从上往下、从左到右进行 Z 字形排列。\n比如输入字符串为 \"LEETCODEISHIRING\" 行数为 3 时，排列如下：\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">L   C   I   R</span><br><span class=\"line\">E T O E S I I G</span><br><span class=\"line\">E   D   H   N</span><br></pre></td></tr></table></figure>\n之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：<code>\"LCIRETOESIIGEDHN\"</code>。\n请你实现这个将字符串进行指定行数变换的函数：\n<code>string convert(string s, int numRows);</code>\n<h5>示例1：</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: s = &quot;LEETCODEISHIRING&quot;, numRows = 4</span><br><span class=\"line\">输出: &quot;LDREOEIIECIHNTSG&quot;</span><br><span class=\"line\">解释:</span><br><span class=\"line\"></span><br><span class=\"line\">L     D     R</span><br><span class=\"line\">E   O E   I I</span><br><span class=\"line\">E C   I H   N</span><br><span class=\"line\">T     S     G</span><br></pre></td></tr></table></figure>\n上面是题目的基本介绍，拿到这道题我的思路首先是遍历字符串，但是字符串排列规律一时间不好确定，\n于是通过画图来看，本来思路是创建一个二维数组往进去填字符串，然后最后按行拼接，去除空的就像，然鹅并没有写出填的方法。于是乎打开了leetcode的题解，膜拜了一下大神的写法。先上代码：\n对于大神的代码每行注释以下方便理解\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> convert = <span class=\"keyword\">function</span>(<span class=\"params\">s, numRows</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(numRows == <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;<span class=\"comment\">//向来函数第一先边界判断！！！</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = <span class=\"title class_\">Math</span>.<span class=\"title function_\">min</span>(s.<span class=\"property\">length</span>, numRows);<span class=\"comment\">//取字符串长度和Z高的较小值</span></span><br><span class=\"line\">    <span class=\"comment\">//console.log(&quot;len=&quot; +len)//输出一下(此行我加的--忽略)</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> rows = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i&lt; len; i++) rows[i] = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"comment\">//console.log(rows)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> loc = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> down = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> c <span class=\"keyword\">of</span> s) &#123;</span><br><span class=\"line\">        rows[loc] += c;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(loc == <span class=\"number\">0</span> || loc == numRows - <span class=\"number\">1</span>)</span><br><span class=\"line\">            down = !down;</span><br><span class=\"line\">        loc += down ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">const</span> row <span class=\"keyword\">of</span> rows) &#123;</span><br><span class=\"line\">        ans += row;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">convert</span>(<span class=\"string\">&quot;LEETCODEISHIRING&quot;</span>,<span class=\"number\">3</span>))</span><br></pre></td></tr></table></figure>\n图解如下：<a href=\"https://leetcode-cn.com/problems/zigzag-conversion/solution/hua-jie-suan-fa-6-z-zi-xing-bian-huan-by-guanpengc/\">转自leetcode</a>\n<img src=/images/Z字形变换图解.png>\n这样的解法就是把直接按行输出字符串，无中间空余，作者设了一个down参量来判断是否是“Z”的竖列，每次给<code>rows[0]rows[1]rows[2]......rows[n]</code>字符串值拼接即可得到答案，感觉很巧妙，关键在与rows的设置和down的运用。其他算法相比这个较复杂，这个好理解，等我发现更好的，或者通法再来补充。\n<a href=\"https://leetcode-cn.com/u/guanpengchn/\">感谢这位leetcode名为灵魂画手作者的奉献</a>\n","prev":{"title":"leetcode-5-最长回文字符串的解法","link":"2020/04/05/leetcode-5-最长回文字符串的解法"},"next":{"title":"ES6语法总结（一）","link":"2020/04/02/ES6语法总结（一）"},"plink":"https://edsion11.github.io/2020/04/04/leetcode-6-Z字形变换/"}