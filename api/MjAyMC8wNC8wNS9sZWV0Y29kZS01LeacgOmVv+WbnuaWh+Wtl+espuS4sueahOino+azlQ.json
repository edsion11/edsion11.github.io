{"title":"leetcode-5-最长回文字符串的解法","date":"2020-04-05T11:36:18.000Z","date_formatted":{"ll":"Apr 5, 2020","L":"04/05/2020","MM-DD":"04-05"},"link":"2020/04/05/leetcode-5-最长回文字符串的解法","tags":["leetcode","动态规划","回文"],"categories":["leetcode"],"updated":"2022-01-22T09:45:40.642Z","content":"<h5>题目：</h5>\n给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 <code> s </code>的最大长度为 1000。\n<h6>示例一</h6>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: <span class=\"string\">&quot;babad&quot;</span></span><br><span class=\"line\">输出: <span class=\"string\">&quot;bab&quot;</span></span><br><span class=\"line\">注意: <span class=\"string\">&quot;aba&quot;</span> 也是一个有效答案</span><br></pre></td></tr></table></figure>\n<h6>一.暴力法</h6>\n首先就是双重循环，一一遍历的暴力法，直接了当。废话不说，直接上代码。\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> huiwen = <span class=\"keyword\">function</span> (<span class=\"params\">s</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">join</span>()==s.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>()) <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(!s || s.<span class=\"property\">length</span> &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> ans=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i =<span class=\"number\">0</span>;i&lt;s.<span class=\"property\">length</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> str=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=i ; j&lt;s.<span class=\"property\">length</span>;j++)&#123;</span><br><span class=\"line\">            str+=s[j]</span><br><span class=\"line\">            <span class=\"comment\">//console.log(str)</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"title function_\">huiwen</span>(str)&amp;&amp;str.<span class=\"property\">length</span>&gt;=max)&#123;</span><br><span class=\"line\">                max=str.<span class=\"property\">length</span></span><br><span class=\"line\">                ans = str</span><br><span class=\"line\">                <span class=\"comment\">//console.log(ans)</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n这是本人自己想的代码，只过了41用例，就超时了，看了看别人的暴力法通过了91用例，道理都差不多，具体应该是str的问题吧。直接到下一种方法<code>动态规划</code>\n<h6>二.动态规划</h6>\n<br>\n<p>由于还不会在博客写公式，先贴一张leetcode的官方题解思路-动态规划</p>\n<br>\n<img src=/images/leetcode-最长回文字符串动态规划解答.png>\n<p>代码如下：</p>\n<p>作者：Alexer-660</p>\n<span>链接：</span><a href=\"https://leetcode-cn.com/problems/longest-palindromic-substring/solution/5-zui-chang-hui-wen-zi-chuan-by-alexer-660/\">点此直通</a><br>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">string</span>&#125; <span class=\"variable\">s</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">string</span>&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> longestPalindrome = <span class=\"keyword\">function</span>(<span class=\"params\">s</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!s || s.<span class=\"property\">length</span> &lt; <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s_f = s.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;&#x27;</span>).<span class=\"title function_\">reverse</span>().<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> resultStr = s[<span class=\"number\">0</span>];<span class=\"comment\">//放结果</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxLen = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> tmpLen = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> maxStrIndex = <span class=\"number\">0</span>;<span class=\"comment\">//最大下标</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"comment\">//判断字符串是否回文</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">isPalinerome</span>(<span class=\"params\">i,r</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(len - i - <span class=\"number\">1</span> == r -tmpLen + <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//初始化二维数组</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = s.<span class=\"property\">length</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(len);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        arr[i] = [];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r = <span class=\"number\">0</span>;r&lt;len;r++)&#123;</span><br><span class=\"line\">            arr[i][r] = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;i&lt;len;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> r=<span class=\"number\">0</span>;r&lt;len;r++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(s[i] == s_f[r])&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i==<span class=\"number\">0</span> || r==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    arr[i][r] = <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    arr[i][r] = arr[i-<span class=\"number\">1</span>][r-<span class=\"number\">1</span>] + <span class=\"number\">1</span></span><br><span class=\"line\">                    tmpLen = arr[i][r]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(tmpLen &gt; maxLen &amp;&amp; <span class=\"title function_\">isPalinerome</span>(i,r))&#123;</span><br><span class=\"line\">                    maxStrIndex = r;</span><br><span class=\"line\">                    maxLen = tmpLen;</span><br><span class=\"line\">                    resultStr =  s.<span class=\"title function_\">substring</span>(i-tmpLen+<span class=\"number\">1</span>,i+<span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> resultStr;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n运行下来耗时<code>700ms</code>多，占用内存是<code>140MB</code>左右\n思路已经明白，就是根据子串的回文性质，转换为求最长子串问题\n，这又映射到类似的<a href=\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\">leetcode-3无重复字符的最长子串问题</a>\n<p>题目如下：</p>\n给定一个字符串，请你找出其中不含有重复字符的 最长子串S的长度。<br>\n<h6>示例</h6>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: <span class=\"string\">&quot;abcabcbb&quot;</span></span><br><span class=\"line\">输出: <span class=\"number\">3</span> </span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 <span class=\"string\">&quot;abc&quot;</span>，所以其长度为 <span class=\"number\">3</span>。</span><br></pre></td></tr></table></figure>\n<p>在后面博客有讲解：<a href=\"#\">直通</a></p><br>\n本次文章到此完毕，谢谢！<span style=\"float:right\">2020/4/4---研究一下动态规划再补充</span>","prev":{"title":"leetcode每日一题(旋转矩阵)","link":"2020/04/07/leetcode每日一题-旋转矩阵"},"next":{"title":"leetcode-6-Z字形变换","link":"2020/04/04/leetcode-6-Z字形变换"},"plink":"https://edsion11.github.io/2020/04/05/leetcode-5-最长回文字符串的解法/","copyright":{"author":"Edsion Gu","link":"<a href=\"https://edsion11.github.io/2020/04/05/leetcode-5-最长回文字符串的解法/\" title=\"leetcode-5-最长回文字符串的解法\">https://edsion11.github.io/2020/04/05/leetcode-5-最长回文字符串的解法/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}